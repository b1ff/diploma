@using Gamification.Core.Extensions
@model Project

@{
    ViewBag.Title = "Project";
    Layout = "~/Areas/ProjectsControlPanel/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>


<section>
	<h3>
		Project info
	</h3>
    <p>
    	<span class="label">Customer key: </span><span class="label label-info">@Model.UserKey</span>
    </p>
    <p>
    	<label>Gamer key: </label><span>@Model.GamerKey</span>
    </p>
</section>

<section>
    <h3>Actions</h3>
    <ul> 
        @foreach (var action in Model.GameActions)
        {
            <li><span>@action.Title</span> - <span>@action.Id</span></li>
            @*<li>@(Html.ActionLink<ActionsController>(x => x.Show(action.Id), action.Description))</li>*@
        }
    </ul>
    @(Html.ActionLink<ActionsController>(x => x.Add(Model.Id), "Add Action", new { @class = "btn" }))
</section>

<section>
    <h3>Triggers</h3>
    <ul>
        @foreach (var trigger in Model.Triggers)
        {
            <li>@trigger.Title</li>
            @*<li>@(Html.ActionLink<TriggersController>(x => x.Show(trigger.Id), trigger.Title) )</li>*@
        }
    </ul>
    @(Html.ActionLink<TriggersController>(x => x.Add(Model.Id), "Add Trigger", new { @class = "btn" }))
</section>

<section>
    <h3>Constraints</h3>
    <ul>
        @foreach (var constraint in Model.NumericConstraints)
        {
            <li>@constraint.Description</li>
            @*<li>@(Html.ActionLink<ConstraintsController>(x => x.Show(constraint.Id, BaseConstraintsTypes.BaseNumericConstrait), constraint.Description))</li>*@
        }
        @foreach (var constraint in Model.CollectionConstraints)
        {
            <li>@constraint.Description</li>
            @*<li>@(Html.ActionLink<ConstraintsController>(x => x.Show(constraint.Id, BaseConstraintsTypes.BaseStringConstraint), constraint.Description))</li>*@
        }
    </ul>
    @(Html.ActionLink<ConstraintsController>(x => x.Add(Model.Id), "Add Constraint", new { @class = "btn" }))
</section>

<section>
	<h3>Statuses</h3>
	<ul>
        @foreach (var status in Model.Statuses)
        {
            <li>@status.StatusName</li>
        }
	</ul>
    <a href="javascript:void(0)" id="addStatusButton" class="btn">Add status</a>
</section>

<section>
	<h3>Achievement</h3>
	<ul class="imagesList">
        @foreach (var achievement in Model.Achievements)
        {
            <li><span>@achievement.Name</span> <img src="@Url.Path(achievement)" alt="@("Achievement" + achievement.Name)"/></li>
        }        
	</ul>
    <a href="javascript:void(0)" id="addAchievementButton" class="btn">Add Achievement</a>
</section>
  
<section>
	<h3>Levels</h3>
    @if (Model.Levels.IsNotEmpty())
    {
        <p>
            Project have @Model.Levels.Count levels
        </p>
    }
    <a href="javascript:void(0)" id="incializeLevelsButton" class="btn">Initialize Levels</a>
</section>  
  
<div id="addStatusDialog">
    @using (Html.BeginForm<StatusesController>(x => x.Save(Model.Id, null)))
    {
        <div class="editor-label">
            <label for="title">Status name: </label>
        </div>
        <div class="editor-field">
            <input type="text" name="statusTitle" id="statusTitle"/>
        </div>
    }
</div>

<div id="addAchievementDialog">
	@using (Html.BeginForm<AchievementsController>(x => x.Save(Model.Id, null, null), FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="editor-label">
        	<label for="title">Title: </label>
        </div>
        <div class="editor-field">
        	<input type="text" name="achievementTitle" id="achievementTitle"/>
        </div>
     
        <div class="editor-label">
        	<label for="achievementImage">Image: </label>
        </div>
        <div class="editor-field">
        	<input type="file" name="achievementImage" id="achievementImage" />
        </div>
    }
</div>

<div id="initializeLevelsDialog">
	@using (Html.BeginForm<LevelsController>(x => x.InitializeLevels(Model.Id, 0, 0)))
    {
        <div class="editor-label">
        	<label for="levelsCount">Levels Count: </label>
        </div>
        <div class="editor-field">
        	<input type="text" name="levelsCount" id="levelsCount"/>
        </div>
     
        <div class="editor-label">
        	<label for="pointsStep">Points Step</label>
        </div>
        <div class="editor-field">
        	<input type="text" name="pointsStep" id="pointsStep"/>
        </div>
    }
</div>


<script type="text/javascript">
    $(function () {
        $('#addStatusDialog').submitDialog('Add Status', '#addStatusButton');
        $('#addAchievementDialog').submitDialog('Add Achievement', '#addAchievementButton')
        $('#initializeLevelsDialog').submitDialog('Initialize Levels', '#incializeLevelsButton');
    });
</script>