@model GameActionViewModel

@{
    ViewBag.Title = "Add action";
    Layout = "~/Areas/ProjectsControlPanel/Views/Shared/_Layout.cshtml";
}

<h2>Add action</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm<ActionsController>(x => x.Save(Model.ProjectId, null))) {
    <fieldset>
        <legend>Game Action</legend>
        @Html.ValidationSummary(false)
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CollectionBasedConstrains)
        </div>
        <div class="editor-field">
            @Html.SelectListFor(model => model.CollectionBasedConstrains)
            @Html.ValidationMessageFor(model => model.CollectionBasedConstrains)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QtyBasedConstraints)
        </div>
        <div class="editor-field">
            @Html.SelectListFor(model => model.QtyBasedConstraints)
            @Html.ValidationMessageFor(model => model.QtyBasedConstraints)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Triggers)
        </div>
        <div class="editor-field">
            @Html.SelectListFor(model => model.Triggers)
            @Html.ValidationMessageFor(model => model.Triggers)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @(Html.ActionLink<ProjectsController>(x => x.Show(Model.ProjectId), "Back to Project"))
</div>
